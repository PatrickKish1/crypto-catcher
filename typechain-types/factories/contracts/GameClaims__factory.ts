/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  GameClaims,
  GameClaimsInterface,
} from "../../contracts/GameClaims";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161058838038061058883398101604081905261002f916100d4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610084565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610104565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b610475806101136000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630962ef791461006757806311eac8551461007c578063715018a6146100ac5780638da5cb5b146100b4578063d2d7231f146100c5578063f2fde38b146100e6575b600080fd5b61007a610075366004610374565b6100f9565b005b60015461008f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007a610274565b6000546001600160a01b031661008f565b6100d86100d3366004610374565b610288565b6040519081526020016100a3565b61007a6100f436600461038d565b6102b9565b600061010482610288565b6001546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610151573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017591906103bd565b10156101bf5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b60015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610210573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023491906103d6565b50604080518381526020810183905233917f912e2fbe2e6836f9f456d2d1f6bd9075963305d4fdf70454f056b3599b57fc08910160405180910390a25050565b61027c6102f7565b6102866000610324565b565b6000600a82101561029b57506000919050565b60646102a9836127106103f8565b6102b3919061041d565b92915050565b6102c16102f7565b6001600160a01b0381166102eb57604051631e4fbdf760e01b8152600060048201526024016101b6565b6102f481610324565b50565b6000546001600160a01b031633146102865760405163118cdaa760e01b81523360048201526024016101b6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561038657600080fd5b5035919050565b60006020828403121561039f57600080fd5b81356001600160a01b03811681146103b657600080fd5b9392505050565b6000602082840312156103cf57600080fd5b5051919050565b6000602082840312156103e857600080fd5b815180151581146103b657600080fd5b80820281158282048414176102b357634e487b7160e01b600052601160045260246000fd5b60008261043a57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122090e6d741496f7fba95af328289ae9d8bef138e99da1dbf16675b465f27e0f0c364736f6c63430008140033";

type GameClaimsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameClaimsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameClaims__factory extends ContractFactory {
  constructor(...args: GameClaimsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdcToken, overrides || {});
  }
  override deploy(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdcToken, overrides || {}) as Promise<
      GameClaims & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GameClaims__factory {
    return super.connect(runner) as GameClaims__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameClaimsInterface {
    return new Interface(_abi) as GameClaimsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GameClaims {
    return new Contract(address, _abi, runner) as unknown as GameClaims;
  }
}
